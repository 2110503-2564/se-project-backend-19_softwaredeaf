components:
  schemas:
    AmenityBooking:
      type: object
      required:
        - campgroundBookingId
        - userId
        - campgroundAmenityId
        - amount
        - startDate
        - endDate
      properties:
        campgroundBookingId:
          type: string
          description: ID of the campground booking
          example: 6805b26ef8974e2fd7ebf820
        userId:
          type: string
          description: ID of the user
          example: 6803889c753927bcb3e97fa0
        campgroundAmenityId:
          type: string
          description: ID of the campground amenity
          example: 680cf47e21bd6903406d3420
        amount:
          type: integer
          description: Number of amenities booked
          example: 2
        startDate:
          type: string
          format: date-time
          description: Start date of the amenity booking
          example: "2025-05-10T00:00:00.000Z"
        endDate:
          type: string
          format: date-time
          description: End date of the amenity booking
          example: "2025-05-12T00:00:00.000Z"
        __v:
          type: integer
          example: 0

tags:
  - name: Amenity Bookings
    description: The amenity bookings managing API

paths:
  /amenitybookings:
    get:
      tags: [Amenity Bookings]
      summary: Get all amenity bookings
      responses:
        '200':
          description: List of all amenity bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AmenityBooking'
        '500':
          description: Fail to fetch amenity bookings

  /amenitybookings/{bookingId}:
    get:
      tags: [Amenity Bookings]
      summary: Get one amenity booking by ID
      security:
        - bearerAuth: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Amenity booking data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmenityBooking'
        '404':
          description: Amenity booking not found
        '500':
          description: Fail to fetch the amenity booking

    put:
      tags: [Amenity Bookings]
      summary: Update an amenity booking
      security:
        - bearerAuth: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmenityBooking'
      responses:
        '200':
          description: Amenity booking updated
        '404': 
          description: Booking / amenity not found
        '400':
          description: Invalid request (invalid date or amount)
        '401':
          description: User is not authorized
        '500':
          description: Cannot update amenity booking
        
    delete:
      tags: [Amenity Bookings]
      summary: Delete an amenity booking
      security:
        - bearerAuth: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Amenity booking deleted successfully
        '404':
          description: Campground / Amenity booking not found
        '401':
          description: Unauthorized to delete this amenity booking
        '500':
          description: Fail to delete amenity booking

  /amenitybookings/bookings/{bookingId}:
    get:
      tags: [Amenity Bookings]
      summary: Get amenity info by campground booking ID
      security:
        - bearerAuth: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Related amenity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmenityBooking'
        '404':
          description: Booking not found
        '500':
          description: Fail to fetch amenity bookings

  /bookings/{campgroundBookingId}/amenities/{amenityId}/amenitybookings:
    post:
      tags: [Amenity Bookings]
      summary: Add new amenity booking
      security:
        - bearerAuth: []
      parameters:
        - name: campgroundBookingId
          in: path
          required: true
          schema:
            type: string
        - name: amenityId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmenityBooking'
      responses:
        '201':
          description: Amenity booking created
        '400':
          description: Invalid date or amenity
        '404':
          description: Booking not found
        '500':
          description: Fail to add amenity booking
