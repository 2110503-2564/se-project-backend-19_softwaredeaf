components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: "6611c4e95e6b2d4ad0f6f5b0"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "johndoe@example.com"
        tel:
          type: string
          example: "123-456-7890"
        role:
          type: string
          enum:
            - user
            - owner
            - admin
          example: "user"
        createdAt:
          type: string
          format: date-time
          example: "2024-04-28T12:34:56.789Z"
      required:
        - name
        - email
        - tel
        - password

    RegisterRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        tel:
          type: string
        role:
          type: string
          enum:
            - user
            - owner
            - admin
      required:
        - name
        - email
        - password
        - tel

    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        token:
          type: string

tags:
- name: Auth
  description: Auth API

paths:
  /auth/register:
    post:
      summary: Register new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /auth/me:
    get:
      summary: Get current logged in user
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'

  /auth/logout:
    get:
      summary: Logout user
      tags:
        - Auth
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object

